[{"/Users/davidfolkins/Documents/Projects/omdb-nominee/src/index.js":"1","/Users/davidfolkins/Documents/Projects/omdb-nominee/src/App.js":"2","/Users/davidfolkins/Documents/Projects/omdb-nominee/src/Search.js":"3"},{"size":223,"mtime":1610400349584,"results":"4","hashOfConfig":"5"},{"size":213,"mtime":1610389682367,"results":"6","hashOfConfig":"5"},{"size":2504,"mtime":1610476808469,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"3a2il8",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/Users/davidfolkins/Documents/Projects/omdb-nominee/src/index.js",[],["16","17"],"/Users/davidfolkins/Documents/Projects/omdb-nominee/src/App.js",[],"/Users/davidfolkins/Documents/Projects/omdb-nominee/src/Search.js",["18"],"import { useState, useEffect } from 'react'\nimport axios from 'axios';\n\nimport './Search.css'\n\nfunction Search() {\n  const [value, setValue] = useState('');\n  const [results, setResults] = useState([]);\n  const [nominee, setNominee] = useState(JSON.parse(localStorage.getItem('nomineeList')) || []);\n\n  useEffect(() => {\n    localStorage.setItem('nomineeList', JSON.stringify(nominee));\n  }, [nominee])\n\n  useEffect(() => {\n    const URL = `https://omdbapi.com/?apikey=a086c7ae&s=${value}`;\n    axios.get(URL).then(response => {\n      setResults([response.data.Search])\n    });\n  }, [value])\n\n  const result = results[0] && results[0].map(movie => {\n    console.log(movie)\n    if (movie.Title) {\n      return (\n        <div className=\"result\">\n          <img src={movie.Poster} alt={movie.Title} width=\"300\" height=\"400\"></img>\n          <div>Title: {movie.Title}</div>\n          <div>Year Released: {movie.Year}</div>\n          <button type=\"button\" onClick={() => setNominee([...nominee, movie.Title])}>Nominate</button>\n        </div>\n      )\n    }\n  })\n\n  const removeNominee = function (nom) {\n    console.log(nominee)\n    const newList = nominee.filter((item) => item.nom !== nom)\n    setNominee(newList)\n  }\n\n  const nominees = nominee.map(nom => {\n    return <div>\n      {nom}\n    </div>\n  })\n\n  const nominneConditional = function () {\n    if (nominee.length <= 0) {\n      return <div className=\"nominees\">Search to select Nominees!</div>\n    } else if (nominee.length === 5) {\n      return <div className=\"nominees\">\n        <div>Thank you for your Nominations!</div>\n        <div>Your Nominees: {nominees}</div>\n        <button type=\"button\" onClick={() => removeNominee()}>Remove Nominations</button>\n      </div>\n    } else {\n      return (<div className=\"nominees\">\n        <div>Your Nominees: {nominees}</div>\n        <button type=\"button\" onClick={() => removeNominee()}>Remove Nominations</button>\n      </div>)\n    }\n  }\n\n  return (\n    <div className=\"Search\">\n      <form className=\"search-container\" onSubmit={event => event.preventDefault()}>\n        <input className=\"search-bar\"\n          type=\"text\"\n          name=\"search\"\n          placeholder=\"Search for an movie...\"\n          spellcheck=\"false\"\n          autocomplete=\"off\"\n          value={value}\n          onChange={event => setValue(event.target.value)}\n        />\n      </form>\n      <div className=\"result-container\">\n        {result}\n      </div>\n      {nominneConditional()}\n    </div>\n  );\n}\n\nexport default Search;\n",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":22,"column":53,"nodeType":"25","messageId":"26","endLine":22,"endColumn":55},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]